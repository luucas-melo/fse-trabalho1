{
  "env": {
    "browser": true,
    "es2021": true,
    "commonjs": true,
    "node": true,
    "jest": true
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "extends": [
    "plugin:@typescript-eslint/recommended",
    "plugin:import/typescript",
    "plugin:prettier/recommended",
    "plugin:react-perf/recommended",
    "plugin:@next/next/recommended",
    "next/core-web-vitals",
    "next"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "plugins": ["@typescript-eslint", "simple-import-sort", "unused-imports", "react-perf"],
  "rules": {
    "object-shorthand": "warn",
    "no-underscore-dangle": "off",
    "import/prefer-default-export": "off",
    "simple-import-sort/imports": "warn",
    "simple-import-sort/exports": "warn",
    "import/first": "error",
    "import/newline-after-import": "error",
    "import/no-duplicates": "error",
    "@typescript-eslint/no-unused-vars": "off",
    "unused-imports/no-unused-imports": "error",
    "unused-imports/no-unused-vars": [
      "warn",
      {
        "vars": "all",
        "args": "after-used",
        "argsIgnorePattern": "^_"
      }
    ],
    "import/no-default-export": "error",
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": [
          "tests/**",
          "**/*.test.{ts,tsx}",
          "**/*.spec.{ts,tsx}",
          "**/test-*.{js,jsx,ts,tsx}",
          "**/stories.{ts,tsx}",
          "**/*.stories.{ts,tsx}",
          "**/*/stories.{ts,tsx}",
          "**/*.d.ts"
        ]
      }
    ],
    "padding-line-between-statements": "off",
    "@typescript-eslint/padding-line-between-statements": [
      "warn",
      { "blankLine": "always", "prev": "*", "next": "block" },
      { "blankLine": "always", "prev": "block", "next": "*" },
      { "blankLine": "always", "prev": "*", "next": "block-like" },
      { "blankLine": "always", "prev": "block-like", "next": "*" },
      { "blankLine": "always", "prev": "*", "next": "return" },
      { "blankLine": "any", "prev": "case", "next": "*" },
      { "blankLine": "always", "prev": "*", "next": ["interface", "type"] }
    ]
  },
  "ignorePatterns": ["**/*.json", "**/*.js"],
  "overrides": [
    {
      "files": ["src/**/*"],
      "rules": {
        "simple-import-sort/imports": [
          "warn",
          {
            "groups": [
              // Node.js builtins. You could also generate this regex if you use a `.js` config.
              // For example: `^(${require("module").builtinModules.join("|")})(/|$)`
              [
                "^(assert|buffer|child_process|cluster|console|constants|crypto|dgram|dns|domain|events|fs|http|https|module|net|os|path|punycode|querystring|readline|repl|stream|string_decoder|sys|timers|tls|tty|url|util|vm|zlib|freelist|v8|process|async_hooks|http2|perf_hooks)(/.*|$)"
              ],
              // Packages. `react` related packages come first.
              ["^react$", "^next", "^react", "^@?\\w"],
              // Internal packages.
              [
                "^(@components|@pages|@hooks|@contexts|@templates|@layouts|@public|@constants|@utils|@controllers|@models|@services|@company|@ui|@UI|@stripe|@database|@aws|@lib|components|utils|config|vendored-lib|@prismadb)(/.*|$|..)"
              ],
              // Side effect imports.
              ["^\\u0000"],
              // Parent imports. Put `..` last.
              ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
              // Other relative imports. Put same-folder imports and `.` last.
              ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
              // Style imports.
              ["@styles", "^.+\\.s?css$"]
            ]
          }
        ]
      }
    },
    {
      "files": ["src/pages/**/*"],
      "rules": { "import/no-default-export": "off" }
    }
  ]
}
